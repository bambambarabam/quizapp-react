[{"/Volumes/data/praktikum/001/src/index.js":"1","/Volumes/data/praktikum/001/src/reportWebVitals.js":"2","/Volumes/data/praktikum/001/src/App.js":"3","/Volumes/data/praktikum/001/src/hoc/Layout/Layout.js":"4","/Volumes/data/praktikum/001/src/containers/Quiz/Quiz.js":"5","/Volumes/data/praktikum/001/src/components/ActiveQuiz/ActiveQuiz.js":"6","/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswersList.js":"7","/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js":"8","/Volumes/data/praktikum/001/src/components/FinishedQuiz/FinishedQuiz.js":"9","/Volumes/data/praktikum/001/src/components/UI/Button/Button.js":"10","/Volumes/data/praktikum/001/src/components/Nav/MenuToggle/MenuToggle.js":"11","/Volumes/data/praktikum/001/src/components/Nav/Drawer/Drawer.js":"12","/Volumes/data/praktikum/001/src/components/UI/Backdrop/Backdrop.js":"13","/Volumes/data/praktikum/001/src/containers/QuizList/QuizList.js":"14","/Volumes/data/praktikum/001/src/containers/Auth/Auth.js":"15","/Volumes/data/praktikum/001/src/containers/QuizCreator/QuizCreator.js":"16","/Volumes/data/praktikum/001/src/components/UI/Input/Input.js":"17","/Volumes/data/praktikum/001/src/form/formFramework.js":"18"},{"size":257,"mtime":1612887945320,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1608194099520,"results":"21","hashOfConfig":"20"},{"size":650,"mtime":1612887945150,"results":"22","hashOfConfig":"20"},{"size":1196,"mtime":1612279085350,"results":"23","hashOfConfig":"20"},{"size":4030,"mtime":1612786057610,"results":"24","hashOfConfig":"20"},{"size":756,"mtime":1610714977410,"results":"25","hashOfConfig":"20"},{"size":619,"mtime":1611304943150,"results":"26","hashOfConfig":"20"},{"size":452,"mtime":1611320114010,"results":"27","hashOfConfig":"20"},{"size":1677,"mtime":1612887945170,"results":"28","hashOfConfig":"20"},{"size":354,"mtime":1611392758870,"results":"29","hashOfConfig":"20"},{"size":425,"mtime":1612274618710,"results":"30","hashOfConfig":"20"},{"size":1630,"mtime":1612887945210,"results":"31","hashOfConfig":"20"},{"size":163,"mtime":1612277959690,"results":"32","hashOfConfig":"20"},{"size":920,"mtime":1612887945300,"results":"33","hashOfConfig":"20"},{"size":4390,"mtime":1612948540530,"results":"34","hashOfConfig":"20"},{"size":3086,"mtime":1612968321120,"results":"35","hashOfConfig":"20"},{"size":1325,"mtime":1612943598810,"results":"36","hashOfConfig":"20"},{"size":182,"mtime":1612966957650,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xndug1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/data/praktikum/001/src/index.js",[],["77","78"],"/Volumes/data/praktikum/001/src/reportWebVitals.js",[],["79","80"],"/Volumes/data/praktikum/001/src/App.js",[],"/Volumes/data/praktikum/001/src/hoc/Layout/Layout.js",[],"/Volumes/data/praktikum/001/src/containers/Quiz/Quiz.js",["81"],"import React, { Component } from 'react';\nimport './Quiz.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\n\nclass Quiz extends Component {\n    state = {\n        currentQuestion: 0,\n        results: {},\n        isFinished: false,\n        answerState: null, // {[id]: 'success'/ 'error'}\n        quiz: [\n            {\n                id: 1,\n                question: 'Какого цвета небо?',\n                rightAnswerId: '2',\n                answers: [\n                    { text: 'Зеленый', id: 1 },\n                    { text: 'Синий', id: 2 },\n                    { text: 'Черный', id: 3 },\n                    { text: 'Белый', id: 4 }\n                ]\n            },\n            {\n                id: 2,\n                question: 'Какого цвета вода?',\n                rightAnswerId: '4',\n                answers: [\n                    { text: 'Зеленый', id: 1 },\n                    { text: 'Синий', id: 2 },\n                    { text: 'Черный', id: 3 },\n                    { text: 'Белый', id: 4 }\n                ]\n            }\n        ]\n    }\n\n    onAnswerHandler = answerId => {\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n        const question = this.state.quiz[this.state.currentQuestion]\n        const results = this.state.results\n        if (question.rightAnswerId == answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n            this.setState({\n                answerState: { [answerId]: 'success' },\n                results\n            })\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                } else {\n                    this.setState({\n                        currentQuestion: this.state.currentQuestion + 1,\n                        answerState: null\n                    })\n                }\n                window.clearTimeout(timeout)\n            }, 1000)\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: { [answerId]: 'error' },\n                results\n            })\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.currentQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        this.setState({\n            currentQuestion: 0,\n            answerState: null,\n            isFinished: false,\n            results: {}\n        })\n    }\n\n    render() {\n        return (\n            <div className='quiz' >\n                <div className='quiz__wrapper'>\n                    <h1 className='quiz__header'>Ответьте на все вопросы</h1>\n                    {\n                        this.state.isFinished ?\n                            <FinishedQuiz\n                                results={this.state.results}\n                                quiz={this.state.quiz}\n                                onRetry={this.retryHandler}\n                            />\n                            :\n                            <ActiveQuiz\n                                answers={this.state.quiz[this.state.currentQuestion].answers}\n                                question={this.state.quiz[this.state.currentQuestion].question}\n                                onAnswerClick={this.onAnswerHandler}\n                                quizLength={this.state.quiz.length}\n                                currentAnswer={this.state.currentQuestion + 1}\n                                state={this.state.answerState}\n                            />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz;","/Volumes/data/praktikum/001/src/components/ActiveQuiz/ActiveQuiz.js",[],"/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswersList.js",[],"/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js",[],"/Volumes/data/praktikum/001/src/components/FinishedQuiz/FinishedQuiz.js",[],"/Volumes/data/praktikum/001/src/components/UI/Button/Button.js",[],"/Volumes/data/praktikum/001/src/components/Nav/MenuToggle/MenuToggle.js",[],"/Volumes/data/praktikum/001/src/components/Nav/Drawer/Drawer.js",[],"/Volumes/data/praktikum/001/src/components/UI/Backdrop/Backdrop.js",[],"/Volumes/data/praktikum/001/src/containers/QuizList/QuizList.js",[],"/Volumes/data/praktikum/001/src/containers/Auth/Auth.js",[],"/Volumes/data/praktikum/001/src/containers/QuizCreator/QuizCreator.js",[],"/Volumes/data/praktikum/001/src/components/UI/Input/Input.js",[],"/Volumes/data/praktikum/001/src/form/formFramework.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":47,"column":36,"nodeType":"90","messageId":"91","endLine":47,"endColumn":38},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]