[{"/Volumes/data/praktikum/001/src/index.js":"1","/Volumes/data/praktikum/001/src/reportWebVitals.js":"2","/Volumes/data/praktikum/001/src/App.js":"3","/Volumes/data/praktikum/001/src/hoc/Layout/Layout.js":"4","/Volumes/data/praktikum/001/src/containers/Quiz/Quiz.js":"5","/Volumes/data/praktikum/001/src/components/ActiveQuiz/ActiveQuiz.js":"6","/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswersList.js":"7","/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js":"8","/Volumes/data/praktikum/001/src/components/FinishedQuiz/FinishedQuiz.js":"9","/Volumes/data/praktikum/001/src/components/UI/Button/Button.js":"10"},{"size":169,"mtime":1608551021550,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608194099520,"results":"13","hashOfConfig":"12"},{"size":211,"mtime":1608550947430,"results":"14","hashOfConfig":"12"},{"size":268,"mtime":1608310134830,"results":"15","hashOfConfig":"12"},{"size":4030,"mtime":1611390432020,"results":"16","hashOfConfig":"12"},{"size":756,"mtime":1610714977410,"results":"17","hashOfConfig":"12"},{"size":619,"mtime":1611304943150,"results":"18","hashOfConfig":"12"},{"size":452,"mtime":1611320114010,"results":"19","hashOfConfig":"12"},{"size":1570,"mtime":1611392242830,"results":"20","hashOfConfig":"12"},{"size":354,"mtime":1611392758870,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"xndug1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Volumes/data/praktikum/001/src/index.js",[],["46","47"],"/Volumes/data/praktikum/001/src/reportWebVitals.js",[],["48","49"],"/Volumes/data/praktikum/001/src/App.js",[],"/Volumes/data/praktikum/001/src/hoc/Layout/Layout.js",[],"/Volumes/data/praktikum/001/src/containers/Quiz/Quiz.js",["50"],"import React, { Component } from 'react';\nimport './Quiz.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\n\nclass Quiz extends Component {\n    state = {\n        currentQuestion: 0,\n        results: {},\n        isFinished: false,\n        answerState: null, // {[id]: 'success'/ 'error'}\n        quiz: [\n            {\n                id: 1,\n                question: 'Какого цвета небо?',\n                rightAnswerId: '2',\n                answers: [\n                    { text: 'Зеленый', id: 1 },\n                    { text: 'Синий', id: 2 },\n                    { text: 'Черный', id: 3 },\n                    { text: 'Белый', id: 4 }\n                ]\n            },\n            {\n                id: 2,\n                question: 'Какого цвета вода?',\n                rightAnswerId: '4',\n                answers: [\n                    { text: 'Зеленый', id: 1 },\n                    { text: 'Синий', id: 2 },\n                    { text: 'Черный', id: 3 },\n                    { text: 'Белый', id: 4 }\n                ]\n            }\n        ]\n    }\n\n    onAnswerHandler = answerId => {\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n        const question = this.state.quiz[this.state.currentQuestion]\n        const results = this.state.results\n        if (question.rightAnswerId == answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n            this.setState({\n                answerState: { [answerId]: 'success' },\n                results\n            })\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                } else {\n                    this.setState({\n                        currentQuestion: this.state.currentQuestion + 1,\n                        answerState: null\n                    })\n                }\n                window.clearTimeout(timeout)\n            }, 1000)\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: { [answerId]: 'error' },\n                results\n            })\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.currentQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        this.setState({\n            currentQuestion: 0,\n            answerState: null,\n            isFinished: false,\n            results: {}\n        })\n    }\n\n    render() {\n        return (\n            <div className='quiz' >\n                <div className='quiz__wrapper'>\n                    <h1 className='quiz__header'>Ответьте на все вопросы</h1>\n                    {\n                        this.state.isFinished ?\n                            <FinishedQuiz\n                                results={this.state.results}\n                                quiz={this.state.quiz}\n                                onRetry={this.retryHandler}\n                            />\n                            :\n                            <ActiveQuiz\n                                answers={this.state.quiz[this.state.currentQuestion].answers}\n                                question={this.state.quiz[this.state.currentQuestion].question}\n                                onAnswerClick={this.onAnswerHandler}\n                                quizLength={this.state.quiz.length}\n                                currentAnswer={this.state.currentQuestion + 1}\n                                state={this.state.answerState}\n                            />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz;","/Volumes/data/praktikum/001/src/components/ActiveQuiz/ActiveQuiz.js",[],"/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswersList.js",[],"/Volumes/data/praktikum/001/src/components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js",[],["51","52"],"/Volumes/data/praktikum/001/src/components/FinishedQuiz/FinishedQuiz.js",[],"/Volumes/data/praktikum/001/src/components/UI/Button/Button.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":47,"column":36,"nodeType":"61","messageId":"62","endLine":47,"endColumn":38},{"ruleId":"53","replacedBy":"63"},{"ruleId":"55","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["65"],["66"],"no-global-assign","no-unsafe-negation"]